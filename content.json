{"pages":[],"posts":[{"title":"tiktokOperation","text":"一、定位逻辑1.1 我为什么要做抖音账号？例如： IP 打造：通俗的讲就是指打造有影响力的个人或品牌，什么是影响力，就是能够影响粉丝的行为。打造 IP 就是用系统性的方法把一个人或一个品牌的影响力打造起来。 展现生活方式 获取粉丝变现 带货变现还是内容变现 品牌宣传 1.2 我应该怎么做？搭建什么类型的账号可以吸引目标用户 目标用户的需求：什么类型的用户 1.3 我怎么做才能把它做好了解竞品 用户的需求点 竞品在做什么样的风格 优于竞品 只做用户喜欢看的 1.4 我目前的困难点在哪？目前遇到的问题 二、如何定位2.1 定位完善（定位公式） 类目：例如美食、运动、带货 借鉴一下竞品：如果不知道表现形式，那么先去看竞品是怎么表现的 表现形式 类型：例如别人实践类型，你就可以做评测类型 2.2 定位分析（稀缺性分析） 竞品分析思维梳理：优缺点，竞品优势，自己优势。 思维还原法：文字还原、用户还原、身份还原、逻辑还原 文字还原：运营文案（例如你刷到一个竞品不错，用文字还原竞品过程，分析竞品） 标题 背景音乐 画面内容 背景 表情 肢体动作 文案字幕 对白 用户还原：竞品的用户（例如看评论区，用户的评论） 寻找评论区绝大多数的观点 身份还原：用户画像（把你的用户的身份还原出来，了解目标用户） 他们是谁 他们关心什么 他们为什么关心这个作品 逻辑还原：模仿竞品逻辑（抖音推荐的竞品是如何运营的） 这个是给谁看的（主流用户） 主流用户是谁（例如：17-23 岁的青少年） 说什么内容给他们听（他们在乎什么就说什么） 怎么说他们最爱听的话 2.3 总结 SWOT S 优势：专业的背景支持 W 劣势：内容物新颖点 O 机会：只是年轻不易断层 T 威胁：行业竞争对手多 2.4 短视频的 48 种类型分 5 大类 48 种 颜值 美女 帅哥 萌娃 时尚 穿搭 美妆 老外 街拍 改造 兴趣 汽车 旅行 游戏 科技 动漫 星座 美食 影视 魔术 声音 cosplay 二次元 生活 动物 母婴 育儿 玩具 生活 体育 教育 情感 校园 才艺 搞笑 音乐 舞蹈 技艺 文字 画画 程序员 职场 外语 其他 明星 演员 品牌 蓝 V 购物车 金句 政务 家具 办公软件 2.5 万能定位公式定位=表现形式+类型+类目 表现形式 真人上镜 PPT 拟人 宠物 VLOG 字母跳动 类型 搞笑 炫酷 剧情 情感 评测 解说 集锦 干货 励志 榜单 类目 技术类 美妆 教育 舞蹈 旅游 美食 游戏 汽车 科技 母婴 职场 穿搭 鸡汤 音乐 短句 2.6 抖音号标签 按照分类系统自动打标签 根据标签，推荐给喜欢此类标签作品的人 流量池 三、账号包装3.1 抖音账号个人资料修改的注意事项 设置头像时，头像不要有任何广告或者不清晰，最好高清、整洁一点。 账号的签名和昵称可以在第三天修改，账号头像和名字、签名都被设置好后，就不要再去修改了。多次修改资料可能会被降权，导致整个账号报废。 四、养号 核心目的：提升账号权限 第一天：注册账号。用手机号注册即可，注册后不完善任何信息，不做任何修改，打开首页刷 1 小时左右系统推荐视频，可以点赞，但不能评论，刷完系统推荐视频后，也能刷同城视频或者直播。第一天要保证有2小时以上的抖音在线时间，2小时的时间可以分割开。 Tips：一个 WiFi 下能连接 3 个账号（有人说 5 个），但一个账号违规之后，Wifi 下的所有账号都会受到处罚，所以，新手尽量不要使用 Wifi 运营抖音账号。 第二天：修改详细信息。修改头像、昵称、年龄、地区、个性签名等，尽量完善用户资料。依旧要保持2小时以上的在线时间。 Tips：（粉丝 1 万之前，不要留任何微信、QQ 等账号信息）如果有头条、火山、微博等第三方账号，尽量绑定。 第三天：兴趣定位。如果后面发现自己账号还没有出现自己将要做的领域内容，可以直接在抖音搜索领域的关键词，进行点赞、关注。依旧要保持 2 个小时的在线时间。 Tips：遇到自己将要操作的领域，可以点赞；遇到不是自己将要操作的领域，可以直接划过。这样能很快的定位到自己所要的领域。 第四天：测试账号。及你给过前三天的养号，第四天就可以发布作品，测试作品的播放量。可以发 5 个作品，每天一个。如果作品播放量大于 200，则证明养号成功。 注意 由于前五个作品都是人工审核，所以不能搬运，违规。 4.1 养号注意事项原则上要保证1机1卡1号 Tips：建议使用单卡、单设备、单账号、单ip，并且在操作的过程中全程使用 4G 网络。 4.2 新号注意事项 账号不要忘记标签化，内容一定要垂直，在确定好账号领域后，一定不要着急去尝试，可以先看看同行或者其他有关的内容。 账号初期很看重账号的完播率，所以初期的作品时长尽量控制在 7~15 秒。同样，刷视频的时候，也要注意注意作品的完播率，刷到相关的视频，不要急着划走，尽量看完、点赞、评论等。 如果系统的推荐视频有 60%与自己的作品同领域，那么可以证明你的抖音账号被标签化了，可以直接发作品了。 如果养号没成功，可以再次养号，这个期间不要发布作品。 多完成认证，认证今日头条也能提高账号的整体权重。 账号注册时间越长，权重越高。 4.3 判断养号是否成功 在第三天时，系统的推荐视频都是自己将要操作的邻域的视频。 前五个作品播放量都大于 200。 4.4 送分题 每天稳定登录（持续 5~7 天） 刷首页推荐、刷同城推荐（各 30 分钟，一共 60 分钟） 看直播、看视频，进行评论互动（5~10 条） 翻一番抖音的热搜榜单、挑战 关注三五个自己喜欢的账号 Tips：以上操作保持正常频率，不要过量，否则减分。 4.5 送命题 账号频繁登录登出，多个抖音账号用同一手机登录。 用模拟器。 用同手机、同 IP 批量注册账号 大量点赞，甚至很多视频不看完就赞 频繁修改个人信息 同一 WiFi 下同时登录超过 5 个抖音号，模拟相同操作 重复同一行为，中间没有其他操作（比如发评论，发一条是加分，快速发十条相同的就是扣分） Tips：养号期间不要发任何视频！ 五、发布作品发布时间 周一至周五时间： 早上 7 点~8 点 中午 12 点~13 点 晚上 12 点 节假日期间： 上午 10 点 下午 15 点~16 点 晚上 16 点~22 点 发布注意事项 一个账号一天可以发布 24 个作品，这样账号有比较大的概率上热门，当然，作品发布超过 24 次后再发布也没必要，抖音一天给一个账号最多上两次热门的机会。 作品建议是高清的，如果有条件可以放 1080P 的，这样的清晰度用户都很喜欢，上传作品时，也可以使用电脑，电脑的压缩比例更低。 不要抄袭其他平台的作品，这样很容易被封号。 内容很相似的作品，为什么没有被封号？ 因为这些作品再原视频的基础上添加了一些内容，可以说是模仿不是抄袭，如果你去某个平台完全下载一个视频，在上传到抖音平台，这就是抄袭。 作品音乐千万不要忽视，用热门音乐或者话题能让你的作品有很大的几率上热门，所以多多关注每天的热门音乐和话题。 六、作品播放量对应问题 当作品的播放量低于 200，则是账号的原因，需要重新养号。 当作品的播放量大于 200 低于 500，则是作品质量的问题，需要提高作品的质量。 当作品的播放量持续再 500 到 1000，则是综合问题，需要具体分析。","link":"/2022/01/05/tiktokOperation/"},{"title":"log4j 漏洞解决方案","text":"今天周六圣诞节，为了解决 log4j 的漏洞加了一天班，集团要求这周所有系统都要完成，时间非常紧迫，但还是勉勉强强地解决了。 解决方案系统方面解决方案是将原来的 log4j 版本根据相应版本进行替换： log4j 1.x log4j 2.x log4j-core-2.12.3.jar log4j-core-2.17.0.jar log4j-api-2.12.3.jar log4j-api-2.17.0.jar slf4j 解决方案： log4j 1.x log4j 2.x slf4j-api-1.7.25.jar slf4j-api-1.7.25.jar log4j-slf4j-impl-2.12.3.jar log4j-slf4j-impl-2.17.0.jar JBoss 的解决方案是将原来 log4j 1.x 版本进行替换： log4j-core-2.12.3.jar log4j-api-2.12.3.jar 总结 struts2 框架的系统，需要将 struts 框架的 jar 进行版本升级，否则会启动错误。还要注意 web.xml 里的配置也需要调整。 目前更新的版本只是暂时解决方案，后续可能还会更新。","link":"/2021/12/25/log4j%20%E6%BC%8F%E6%B4%9E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"title":"继续修复 log4j 漏洞","text":"老板今天给了个难搞的系统需要替换 log4j jar 包解决漏洞，系统框架比较旧，用的 struts 1.x 版本，spring 2.0 版本，jdk 使用的是 openjdk1.8，原本 log4j 版本是 1.x 需要更新到最新的 2.17 版本。 下午研究了一下，发现并没那么简单，把 jar 包替换后，初步判断可能 jar 包冲突，本想看看是否能在代码中排除冲突，可惜没有实现，错误信息较难排除错误，明天继续检查 jar 包版本，目标是搞定。","link":"/2021/12/27/%E7%BB%A7%E7%BB%AD%E4%BF%AE%E5%A4%8D%20log4j%20%E6%BC%8F%E6%B4%9E/"},{"title":"完成 log4j 漏洞修复 &amp; ASE的新需求","text":"log4j昨天立的 flag 已达标，总结一下今天早上如何解决的。 之前系统一直使用的 log4j-1.2.17，要将其改为 log4j2，在删除了旧版的 jar 后，添加新版 jar 后，遇到以下错误： 错误日志1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465ERROR StatusLogger Caught java.lang.AbstractMethodError setting feature http://xml.org/sax/features/external-general-entities to false on DocumentBuilderFactory org.apache.xerces.jaxp.DocumentBuilderFactoryImpl@476ac20c: java.lang.AbstractMethodError: javax.xml.parsers.DocumentBuilderFactory.setFeature(Ljava/lang/String;Z)V java.lang.AbstractMethodError: javax.xml.parsers.DocumentBuilderFactory.setFeature(Ljava/lang/String;Z)V at org.apache.logging.log4j.core.config.xml.XmlConfiguration.setFeature(XmlConfiguration.java:213) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.disableDtdProcessing(XmlConfiguration.java:205) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.newDocumentBuilder(XmlConfiguration.java:194) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.&lt;init&gt;(XmlConfiguration.java:92) at org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory.getConfiguration(XmlConfigurationFactory.java:46) at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:451) at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:385) at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:237) at org.apache.logging.log4j.core.config.Configurator.initialize(Configurator.java:158) at org.apache.logging.log4j.web.Log4jWebInitializerImpl.initializeNonJndi(Log4jWebInitializerImpl.java:168) at org.apache.logging.log4j.web.Log4jWebInitializerImpl.start(Log4jWebInitializerImpl.java:110) at org.apache.logging.log4j.web.Log4jServletContextListener.contextInitialized(Log4jServletContextListener.java:56) at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4813) at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5272) at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147) at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725) at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701) at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717) at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1696) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:484) at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:433) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468) at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76) at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309) at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401) at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:324) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) 环境 jdk：1.8 log4j2： 2.17.0 wildfly: 10.1.0 解决方案发现 xerces 太旧，两个旧版 jar： xerces.jar xercesImpl.jar 尝试替换解决： xercesImpl-2.11.0.jar xml-apis-1.4.01.jar 跨區轉單目標區 ASE 單增加【已開單】郵件通知功能总结 为了防止发送 mail 地址重复，用 LinkedHashSet 保存后转为 List。 优化发送人取值问题。","link":"/2021/12/28/%E5%AE%8C%E6%88%90%20log4j%20%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D&ASE%E7%9A%84%E6%96%B0%E9%9C%80%E6%B1%82/"},{"title":"潘大胆的一天","text":"大家好！我是潘大胆我爱吃螺狮粉","link":"/2021/12/22/%E6%BD%98%E5%A4%A7%E8%83%86%E7%9A%84%E4%B8%80%E5%A4%A9/"}],"tags":[{"name":"tiktok","slug":"tiktok","link":"/tags/tiktok/"},{"name":"Log4j","slug":"Log4j","link":"/tags/Log4j/"},{"name":"ASE","slug":"ASE","link":"/tags/ASE/"},{"name":"Hobbies","slug":"Hobbies","link":"/tags/Hobbies/"}],"categories":[{"name":"Learn","slug":"Learn","link":"/categories/Learn/"},{"name":"Work","slug":"Work","link":"/categories/Work/"},{"name":"Life","slug":"Life","link":"/categories/Life/"},{"name":"Technology","slug":"Work/Technology","link":"/categories/Work/Technology/"}]}