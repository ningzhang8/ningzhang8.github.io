{"pages":[],"posts":[{"title":"log4j 漏洞解决方案","text":"今天周六圣诞节，为了解决 log4j 的漏洞加了一天班，集团要求这周所有系统都要完成，时间非常紧迫，但还是勉勉强强地解决了。 解决方案系统方面解决方案是将原来的 log4j 版本根据相应版本进行替换： log4j 1.x log4j 2.x log4j-core-2.12.3.jar log4j-core-2.17.0.jar log4j-api-2.12.3.jar log4j-api-2.17.0.jar slf4j 解决方案： log4j 1.x log4j 2.x slf4j-api-1.7.25.jar slf4j-api-1.7.25.jar log4j-slf4j-impl-2.12.3.jar log4j-slf4j-impl-2.17.0.jar JBoss 的解决方案是将原来 log4j 1.x 版本进行替换： log4j-core-2.12.3.jar log4j-api-2.12.3.jar 总结 struts2 框架的系统，需要将 struts 框架的 jar 进行版本升级，否则会启动错误。还要注意 web.xml 里的配置也需要调整。 目前更新的版本只是暂时解决方案，后续可能还会更新。","link":"/2021/12/25/log4j%20%E6%BC%8F%E6%B4%9E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"title":"继续修复 log4j 漏洞","text":"老板今天给了个难搞的系统需要替换 log4j jar 包解决漏洞，系统框架比较旧，用的 struts 1.x 版本，spring 2.0 版本，jdk 使用的是 openjdk1.8，原本 log4j 版本是 1.x 需要更新到最新的 2.17 版本。 下午研究了一下，发现并没那么简单，把 jar 包替换后，初步判断可能 jar 包冲突，本想看看是否能在代码中排除冲突，可惜没有实现，错误信息较难排除错误，明天继续检查 jar 包版本，目标是搞定。","link":"/2021/12/27/%E7%BB%A7%E7%BB%AD%E4%BF%AE%E5%A4%8D%20log4j%20%E6%BC%8F%E6%B4%9E/"},{"title":"完成 log4j 漏洞修复 &amp; ASE的新需求","text":"log4j昨天立的 flag 已达标，总结一下今天早上如何解决的。 之前系统一直使用的 log4j-1.2.17，要将其改为 log4j2，在删除了旧版的 jar 后，添加新版 jar 后，遇到以下错误： 错误日志1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465ERROR StatusLogger Caught java.lang.AbstractMethodError setting feature http://xml.org/sax/features/external-general-entities to false on DocumentBuilderFactory org.apache.xerces.jaxp.DocumentBuilderFactoryImpl@476ac20c: java.lang.AbstractMethodError: javax.xml.parsers.DocumentBuilderFactory.setFeature(Ljava/lang/String;Z)V java.lang.AbstractMethodError: javax.xml.parsers.DocumentBuilderFactory.setFeature(Ljava/lang/String;Z)V at org.apache.logging.log4j.core.config.xml.XmlConfiguration.setFeature(XmlConfiguration.java:213) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.disableDtdProcessing(XmlConfiguration.java:205) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.newDocumentBuilder(XmlConfiguration.java:194) at org.apache.logging.log4j.core.config.xml.XmlConfiguration.&lt;init&gt;(XmlConfiguration.java:92) at org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory.getConfiguration(XmlConfigurationFactory.java:46) at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:451) at org.apache.logging.log4j.core.config.ConfigurationFactory$Factory.getConfiguration(ConfigurationFactory.java:385) at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:237) at org.apache.logging.log4j.core.config.Configurator.initialize(Configurator.java:158) at org.apache.logging.log4j.web.Log4jWebInitializerImpl.initializeNonJndi(Log4jWebInitializerImpl.java:168) at org.apache.logging.log4j.web.Log4jWebInitializerImpl.start(Log4jWebInitializerImpl.java:110) at org.apache.logging.log4j.web.Log4jServletContextListener.contextInitialized(Log4jServletContextListener.java:56) at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4813) at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5272) at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147) at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725) at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701) at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717) at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1696) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:484) at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:433) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468) at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76) at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309) at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401) at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invoke(Method.java:498) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:324) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) 环境 jdk：1.8 log4j2： 2.17.0 wildfly: 10.1.0 解决方案发现 xerces 太旧，两个旧版 jar： xerces.jar xercesImpl.jar 尝试替换解决： xercesImpl-2.11.0.jar xml-apis-1.4.01.jar 跨區轉單目標區 ASE 單增加【已開單】郵件通知功能总结 为了防止发送 mail 地址重复，用 LinkedHashSet 保存后转为 List。 优化发送人取值问题。","link":"/2021/12/28/%E5%AE%8C%E6%88%90%20log4j%20%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D&ASE%E7%9A%84%E6%96%B0%E9%9C%80%E6%B1%82/"},{"title":"tiktokOperation","text":"我为什么要做抖音账号？例如： IP 打造：通俗的讲就是指打造有影响力的个人或品牌，什么是影响力，就是能够影响粉丝的行为。打造 IP 就是用系统性的方法把一个人或一个品牌的影响力打造起来。 展现生活方式 获取粉丝变现 带货变现还是内容变现 品牌宣传 我应该怎么做？搭建什么类型的账号可以吸引目标用户 目标用户的需求：什么类型的用户 我怎么做才能把它做好了解竞品 用户的需求点 竞品在做什么样的风格 优于竞品 只做用户喜欢看的 我目前的困难点在哪？目前遇到的问题 定位完善（定位公式） 类目：例如美食、运动、带货 借鉴一下竞品：如果不知道表现形式，那么先去看竞品是怎么表现的 表现形式 类型：例如别人实践类型，你就可以做评测类型 定位分析（稀缺性分析） 竞品分析思维梳理：优缺点，竞品优势，自己优势。 思维还原法：文字还原、用户还原、身份还原、逻辑还原 文字还原：运营文案（例如你刷到一个竞品不错，用文字还原竞品过程，分析竞品） 标题 背景音乐 画面内容 背景 表情 肢体动作 文案字幕 对白 用户还原：竞品的用户（例如看评论区，用户的评论） 寻找评论区绝大多数的观点 身份还原：用户画像（把你的用户的身份还原出来，了解目标用户） 他们是谁 他们关心什么 他们为什么关心这个作品 逻辑还原：模仿竞品逻辑（抖音推荐的竞品是如何运营的） 这个是给谁看的（主流用户） 主流用户是谁（例如：17-23 岁的青少年） 说什么内容给他们听（他们在乎什么就说什么） 怎么说他们最爱听的话 总结 SWOT S 优势：专业的背景支持 W 劣势：内容物新颖点 O 机会：只是年轻不易断层 T 威胁：行业竞争对手多","link":"/2022/01/05/tiktokOperation/"},{"title":"潘大胆的一天","text":"大家好！我是潘大胆我爱吃螺狮粉","link":"/2021/12/22/%E6%BD%98%E5%A4%A7%E8%83%86%E7%9A%84%E4%B8%80%E5%A4%A9/"}],"tags":[{"name":"Log4j","slug":"Log4j","link":"/tags/Log4j/"},{"name":"ASE","slug":"ASE","link":"/tags/ASE/"},{"name":"tiktok","slug":"tiktok","link":"/tags/tiktok/"},{"name":"Hobbies","slug":"Hobbies","link":"/tags/Hobbies/"}],"categories":[{"name":"Work","slug":"Work","link":"/categories/Work/"},{"name":"Technology","slug":"Work/Technology","link":"/categories/Work/Technology/"},{"name":"Life","slug":"Life","link":"/categories/Life/"}]}